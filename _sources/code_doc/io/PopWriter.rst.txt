.. _PopWriter_ref:

PopWriter
=========

.. rst-class:: hidden

   This page desctibes the class :index:`PopWriter`

The class ``PopWriter`` is used to write the :ref:`population data<SPopulation_ref>` to a subgroup of the :ref:`populations group<PopsGroup_ref>`.

It owns specialized writers for the various environment and population data.

Code: `PopWriter.h <https://github.com/jodyxha/QHG4/blob/main/QHG4/io/PopWriter.h>`_, `PopWriter.cpp <https://github.com/jodyxha/QHG4/blob/main/QHG4/io/PopWriter.cpp>`_

PublicMethods
-------------

``constructor``
^^^^^^^^^^^^^^^
.. code-block:: c++

    PopWriter(std::vector<PopBase *> vPops);

The constructor copies the vector of populations to an internal vector.

.. -----------------------------------------------------------------------------

``destructor``
^^^^^^^^^^^^^^
.. code-block:: c++

   ~PopWriter();
    
The destructor closes open HDF handles.

.. -----------------------------------------------------------------------------

``write``
^^^^^^^^^
.. code-block:: c++

    int write(const std::string sFilename,   int iStep,              float fStartTime, 
              const std::string sInfoString, const std::string sSpc, int iWSpecial, int iDumpMode=-1);

.. code-block:: c++

    int write(hid_t hFile, const std::string sSub, int iWSpecial, int iDumpMode=-1); 

| The first version creates (or opens) a qdf file and writes the population data.
| The second version uses the open file to write the population data

``sFileName``
    Name of output file.

``iStep``
    The current simulation step. This number is saved as an attribute in the output file's root group. 

``fStartTime``
    The start time of the simulation (i.e. the 'real' time at step 0). This number is also saved as an attribute in the output file's root group.

``sInfoString``
    An arbitrary string which will be saved as an attribute in the output file's root group.

``sSpc``
    Species name of the population to be written

``iWSpecial``
    A population specific write flag. An or-ed combination of the values shown in the table below.

+------------------------+-------+----------------------------+
| Pop-specific Flag      | Value | meaninging                 |
+========================+=======+============================+
| ``PW_NONE``            |  0    | Write nothing              |
+------------------------+-------+----------------------------+
| ``PW_AGENTS_ONLY``     |  1    | Write agent data only      |
+------------------------+-------+----------------------------+  
| ``PW_STATS_ONLY``      |  2    | Write move statistics only |
+------------------------+-------+----------------------------+
| ``PW_ADDITIONAL_ONLY`` |  4    | Write additional data only |
+------------------------+-------+----------------------------+
| ``PW_ALL``             |  7    | Write all                  |
+------------------------+-------+----------------------------+

``iDumpMode``
    Dump mode. If -1, normal writing is performed, otherwise use ``LBController::DUMP_MODE_FLAT`` (0)  or ``LBController::DUMP_MODE_SMART`` (1).

Returns 0 on success, -1 on failure.

.. -----------------------------------------------------------------------------

``openPopulationGroup``
^^^^^^^^^^^^^^^^^^^^^^^
.. code-block:: c++

    int openPopulationGroup():

Opens the population group and stores the HDF handle to it.

Returns 0 on success, -1 on failure.

.. -----------------------------------------------------------------------------

``closePopulationGroup``
^^^^^^^^^^^^^^^^^^^^^^^^
.. code-block:: c++

    void closePopulationGroup();

Closes the population group.

.. -----------------------------------------------------------------------------

Protected Methods
-----------------

``opencreatePopGroup``
^^^^^^^^^^^^^^^^^^^^^^
.. code-block:: c++

    int opencreatePopGroup();

Opens or creates the population group and stores the HDF handle to it.
 
Returns 0 on success, -1 on failure.

.. -----------------------------------------------------------------------------

``opencreateSpeciesGroup``
^^^^^^^^^^^^^^^^^^^^^^^^^^
.. code-block:: c++

    int opencreateSpeciesGroup(PopBase *pPB, int iDumpMode);

Opens or creates the species group and stores the HDF handle to it.

Returns 0 on success, -1 on failure.

.. -----------------------------------------------------------------------------

