.. _ActionPrio_ref:

Actions and Priorities
======================

Actions
-------

Every population object has one or more actions (except for the :ref:`trivial population<TutorialStatic_ref>`).

Some actions only access or modify data from an agent (e.g. :ref:`OldAgeDeath<OldAgeDeath_ref>`, :ref:`Fertility<Fertility_ref>`), 
whereas other actions modify the states of several agents (e.g. :ref:`RandomPair<RandomPair_ref>`).  

Other actions interact with the environment or agents of other populations.

Apart from having access to the grid and the agents of a population, acctions can exchange data via arrays - either arrays provided by the population, or by means of :ref:`shared arrays<ArrayShare_ref>`.

.. image:: ../images/action_access.png


All actions are derived from the base class :ref:`Action<Action_ref>` (some actions are described in more detail in the chapter :ref:`actions<actions_overview_ref>` )



Priorities
----------

The order in which actions are executed is often important. 
For example, agents must be paired *before* they can make offspring, or, obviously, an agent should move before it dies (and not vice-versa).
To handle this issue, each action of a population has a priority level assigned to it
(when starting a simulation from scratch, the priority levels must be set in the :ref:`xml initialisation file<pop_xml_example_ref>`).

Note: In QHG the actions with lower priority levels are executed before actions with higher priority levels. 
If two actions have the same priority level, the order of execution is undefined.

In each step during the simulation, first the actions with the lowest priority values are applied to all agents, then the action with second fighest priority level are applied to all agents, and so on.

.. image:: ../images/prio_loop.png

