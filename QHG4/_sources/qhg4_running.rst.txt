.. _Running_QHG_re:

Running QHG
===========

In this document we descriebe the various ways to run QHG.

Description of Options
~~~~~~~~~~~~~~~~~~~~~~

Whe calling QHG without any options,

.. code-block:: bash

    QHGMain 

you will be presented with a list of possible options.
To get detailed information about an option, use the ``--help=`` option:

.. code-block:: bash

    QHGMain --help=reads-config

The same information can be found in the :ref:`code documentation QHGMain<QHGMain_ref>`.

Running with Explicit Options
-----------------------------

The basic way to run QHG is to list all options after the ``QHGMain``.

.. code-block:: bash

   QHGMain -data-dirs=${QHG4_DIR}/tutorial_data/grids/   \
        --events='write|grid+geo+pop:sapiens@20000' \ 
        --grid=ico32s.qdf   --log-file=tutorial_02.log  \
        --num-iters=200     --output-dir=output/tutorial_02 \ 
        --output-prefix=tut --pops='tut_OldAgeDie.xml:tut_OldAgeDie.dat' \
        --shuffle=92244 --start-time=0 

This command could be on one line only - for better readbility it has been 
spread over several lines.

It is veryx useful to capture the standard output seee additional information:

.. code-block:: bash

   QHGMain -data-dirs=... ... --start-time=0 > SimOutput.out


Using a Configuraion File
-------------------------

Since in normal use cases there are a lot of options, it might be usefule to us a configuration file.
A configuration file is a simple text file containing all the options, one per lien,
for example

.. code-block:: text

    --data-dirs=${QHG4_DIR}/tutorial_data/grids/
    --events='write|grid+geo+pop:sapiens@20000'  
    --grid=ico32s.qdf
    --log-file=tutorial_02.log 
    --num-iters=200 
    --output-dir=output/tutorial_02 
    --output-prefix=tut 
    --pops='tut_OldAgeDie.xml:tut_OldAgeDie.dat' 
    --shuffle=92244 
    --start-time=0 

THen you can call HGQ like this:

.. code-block:: bash

    QHGMain --read-config=my_config.cfg > SimOutput.out

Any options you explicitly add on the command line will override the ones in the configuration file.
For instance, 

  .. code-block:: bash

    QHGMain --read-config=my_config.cfg --num-iters=600 > SimOutput.out

Will run the simulation with the options defined in ``my_config.cfg``, 
except for ``--num_iters`` which will be set to 600.


Working with Plugins
--------------------

For this you will have to compile QHG like this:

.. code-block:: bash

    DYNAMIC_POPS=1 OPT=1 OUt=QHGMainDyn make clean QHGMain

(The "OUT=QHGMainDyn" will cause the compiled application to be renamed to "QHGMainDyn".
And you will have to have make some plugins,too
(if xou have not built them already). For example 

.. code-block:: bash

    SHORT=tut_08 OPT=1 OUZT=~/my_so_dir make plugina

This will build the so-files for the plugin and save 
them in the specified directory.

To run:

.. code-block:: bash

    QHGMainDyn --read-config=my_config.cfg --dyn-pops --so-dirs=~/my_so_dir > SimOutput.out

